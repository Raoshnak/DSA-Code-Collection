1. Decimal to Binary

i = 0
ans = 0
n = int(input("Enter a no in decimal form"))
if (n < 0):
    n = pow(2, 16) + n
print(n)
while (n):
    lastBit = n & 1
    ans = (pow(10, i) * lastBit) + ans
    n = n >> 1
    i += 1
    #print(ans)
print(ans)

2. Binary to Decimal

n = int(input("Enter number in Binary format"))
i = 0
ans = 0
while (n != 0):
    digit = n % 10
    if (digit == 1):
        ans = ans + pow(2, i)
    n = n // 10
    i += 1
print("Number in decimal format is")
print(ans)

3. Complement of Base 10 Integer

class Solution:
    def bitwiseComplement(self, n: int) -> int:
        m = n
        mask = 0
        if n==0:
            return 1
        while (m!=0):
            mask = (mask << 1) | 1
            m = m >> 1
        ans = (~n) & mask
        return ans
        

4. Power of Two

class Solution:
    def isPowerOfTwo(self, n: int) -> bool:
        if (n <= 0):
            return False
        return (n & (n - 1) == 0)

5. Missing Number

def MissingNo(arr, n):
    x1 = arr[0]
    x2 = 1
     
    for i in range(1, n):
        x1 = x1 ^ arr[i]
         
    for i in range(2, n + 2):
        x2 = x2 ^ i
     
    return x1 ^ x2

T = int(input())
for i in range(T):
    N = int(input())
    arr = list(map(int,input().split()))
    print(MissingNo(arr, N))

6. Reverse Bits

T = int(input())
for i in range(T):
    N = int(input())
    result = 0
    for j in range(32):
        result<<=1
        result |= N & 1
        N >>= 1
    print(result)


7. Flip Bits

T = int(input())
count = 0
res = 1
for i in range(T):
    A,B = map(int,input().split())
    res = (A ^ B)
    while(res):
        count+=res & 1
        res = res>>1
    print(count)
    count = 0

8. Reverse Bits

T = int(input())
for i in range(T):
    N = int(input())
    result = 0
    for j in range(32):
        result<<=1
        result |= N & 1
        N >>= 1
    print(result)

9. Compute a power b

T = int(input())
m = int(1000000007)
for i in range(T):
    a,b = map(int,input().split())
    a = a % m
    b = b % m
    ans = 1
    while(b>0):
        if(b % 2 == 1):
            ans = ans * a%m
        b = b//2
        a = a*a%m
    print(ans)
    
10. Triple Trouble

def checkbits(N, i):
    return (N >> i) & 1
def solve(arr, N):
    ans = 0
    for b in range(32):
        count = 0
        for i in range(N):
            if (checkbits(arr[i], b)):
                count += 1
        ans = ans + ((count % 3) * (1 << b))
    return ans
T = int(input())
for i in range(T):
    N = int(input())
    arr = list(map(int, input().split()))
    print(solve(arr, N))